# Project root file
PROJROOT=$(CURDIR)

# Cross Toolchain path, change this accordingly
TOOLROOT=$(HOME)/Downloads/gcc-arm-none-eabi-7-2018-q2-update/bin

# name of executable
ELF=$(notdir $(CURDIR)).elf                    

# Library path
LIBROOT=$(PROJROOT)/STM32F10x_StdPeriph_Lib_V3.5.0

# Tools
CC=$(TOOLROOT)/arm-none-eabi-gcc
LD=$(TOOLROOT)/arm-none-eabi-gcc
AR=$(TOOLROOT)/arm-none-eabi-ar
AS=$(TOOLROOT)/arm-none-eabi-as

# Code Paths
DEVICE=$(LIBROOT)/Libraries/CMSIS/CM3/DeviceSupport/ST/STM32F10x
CORE=$(LIBROOT)/Libraries/CMSIS/CM3/CoreSupport
PERIPH=$(LIBROOT)/Libraries/STM32F10x_StdPeriph_Driver

# FreeRTOS src
RTOSSRC=$(PROJROOT)/FreeRTOSv9.0/Source
PORTFILE=$(PROJROOT)/FreeRTOSv9.0/Source/portable/GCC/ARM_CM3
MEMMANG=$(PROJROOT)/FreeRTOSv9.0/Source/portable/MemMang
RTOSINC=$(RTOSSRC)/include

# FreeRTOS config
RTOSCONFIG=$(SRCROOT)/config

# Search path for standard files
vpath %.c $(SRCROOT)

# Search path for perpheral library
vpath %.c $(CORE)
vpath %.c $(PERIPH)/src
vpath %.c $(DEVICE)

# search path for FreeRTOS source and config
vpath %.c $(RTOSSRC)
vpath %.c $(PORTFILE)
vpath %.c $(MEMMANG)

#  Processor specific
PTYPE = STM32F10X_MD_VL 
LDSCRIPT = $(SRCROOT)/stm32f103.ld
STARTUP= startup_stm32f10x.o system_stm32f10x.o 

# Compilation Flags
FULLASSERT = -DUSE_FULL_ASSERT 

LDFLAGS+= -T$(LDSCRIPT) -mthumb -mcpu=cortex-m3 
CFLAGS+= -mcpu=cortex-m3 -mthumb 
CFLAGS+= -I$(SRCROOT) -I$(DEVICE) -I$(CORE) -I$(PERIPH)/inc -I.
CFLAGS+= -D$(PTYPE) -DUSE_STDPERIPH_DRIVER $(FULLASSERT)
CFLAGS+= -I$(RTOSCONFIG) -I$(RTOSINC) -I$(PORTFILE) -I.

# Build executable 
$(ELF) : $(OBJS)
	$(LD) $(LDFLAGS) -o $@ $(OBJS) $(LDLIBS)

# compile and generate dependency info
%.o: %.c
	$(CC) -c $(CFLAGS) $< -o $@
	$(CC) -MM $(CFLAGS) $< > $*.d

%.o: %.s
	$(CC) -c $(CFLAGS) $< -o $@

clean:
	rm -f $(OBJS) $(OBJS:.o=.d) $(ELF) startup_stm32f* $(CLEANOTHER) *.elf *.bin

debug: $(ELF)
	arm-none-eabi-gdb $(ELF)


# pull in dependencies
-include $(OBJS:.o=.d)

